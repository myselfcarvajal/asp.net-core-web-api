// <auto-generated />
using System;
using AwpaAcademic.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AwpaAcademic.Api.Data.Migrations
{
    [DbContext(typeof(AwpaAcademicDbContext))]
    [Migration("20240723033104_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Facultad", b =>
                {
                    b.Property<string>("CodigoFacultad")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("NombreFacultad")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("CodigoFacultad");

                    b.HasIndex("CodigoFacultad")
                        .IsUnique();

                    b.ToTable("Facultades");

                    b.HasData(
                        new
                        {
                            CodigoFacultad = "ACE",
                            NombreFacultad = "Administrativas, Contables y Económicas"
                        },
                        new
                        {
                            CodigoFacultad = "DCPS",
                            NombreFacultad = "Derecho, Ciencias Políticas y Sociales"
                        },
                        new
                        {
                            CodigoFacultad = "IT",
                            NombreFacultad = "Ingenierías Tecnológicas"
                        },
                        new
                        {
                            CodigoFacultad = "BA",
                            NombreFacultad = "Bellas Artes"
                        },
                        new
                        {
                            CodigoFacultad = "CBE",
                            NombreFacultad = "Ciencias Básicas y de la Educación"
                        },
                        new
                        {
                            CodigoFacultad = "CS",
                            NombreFacultad = "Ciencias de la Salud"
                        });
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Publicacion", b =>
                {
                    b.Property<Guid>("IdPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodigoFacultad")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdPublicacion");

                    b.HasIndex("CodigoFacultad");

                    b.HasIndex("UserId");

                    b.ToTable("Publicaciones");

                    b.HasData(
                        new
                        {
                            IdPublicacion = new Guid("8da5c671-5da9-4d2d-92a1-80f7838b72e9"),
                            Autor = "Alanna Little",
                            CodigoFacultad = "IT",
                            CreatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2170),
                            Descripcion = "olo terreo audacia aqua. Sono vulgus viduo. Synagoga textor aestas odit cito deduco.",
                            Titulo = "bduco carcer incidunt",
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2182),
                            Url = "https://ashamed-neonate.net/",
                            UserId = 2147483647
                        },
                        new
                        {
                            IdPublicacion = new Guid("7a621b34-03d7-456f-a2eb-f95ece257c60"),
                            Autor = "Wilfredo Douglas",
                            CodigoFacultad = "ACE",
                            CreatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2186),
                            Descripcion = "Adflicto corona curtus conspergo velum paulatim ea solitudo. Ancilla ipsam charisma deporto accusantium aureus earum. Spiritus verumtamen aptus temeritas creber tredecim.",
                            Titulo = "possimus uterque curis",
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2187),
                            Url = "https://unwelcome-circulation.net/",
                            UserId = 1902583458
                        },
                        new
                        {
                            IdPublicacion = new Guid("1430a275-bcea-4499-9075-cdea11b4ae05"),
                            Autor = "Darien Raynor",
                            CodigoFacultad = "DCPS",
                            CreatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2191),
                            Descripcion = "emplum tenetur confero cupio copia verbera solvo a corrupti deputo. Constans audacia torrens paens aduro. Chirographum traho confido convoco cupressus aeger amet.",
                            Titulo = "dignissimos toties cenaculum",
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2192),
                            Url = "https://that-clarinet.biz",
                            UserId = 1423423431
                        },
                        new
                        {
                            IdPublicacion = new Guid("cf6f65fe-85ef-4047-95db-107903d10bc4"),
                            Autor = "Bruce Stoltenberg",
                            CodigoFacultad = "IT",
                            CreatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2195),
                            Descripcion = "Corporis denuo creo vacuus crepusculum corrigo deputo aptus. Desipio conqueror doloribus celebrer somniculosus officia usque quis. Tenuis vomica solvo comburo.",
                            Titulo = "est thorax conduco",
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 740, DateTimeKind.Local).AddTicks(2196),
                            Url = "https://deserted-rainbow.name",
                            UserId = 2147483647
                        });
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DOCENTE"
                        });
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Codigofacultad")
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Passwd")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Codigofacultad");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 2147483647,
                            Apellido = "Dickinson",
                            Codigofacultad = "IT",
                            CreatedAd = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1106),
                            Email = "shaniya_dickinson@gmail.com",
                            Nombre = "Shaniya",
                            Passwd = "Passwd",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1119)
                        },
                        new
                        {
                            Id = 1902583458,
                            Apellido = "Hane-Willms",
                            Codigofacultad = "ACE",
                            CreatedAd = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1122),
                            Email = "kevin.hane-willms@gmail.com",
                            Nombre = "Kevin",
                            Passwd = "Passwd",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1123)
                        },
                        new
                        {
                            Id = 1423423431,
                            Apellido = "Dickinson",
                            Codigofacultad = "DCPS",
                            CreatedAd = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1126),
                            Email = "kaitlyn.dickinson81@gmail.com",
                            Nombre = "Kaitlyn",
                            Passwd = "Passwd",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1127)
                        },
                        new
                        {
                            Id = 432512321,
                            Apellido = "Lopez",
                            CreatedAd = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1129),
                            Email = "Mario@gmail.com",
                            Nombre = "Mario",
                            Passwd = "Passwd",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2024, 7, 22, 22, 31, 3, 739, DateTimeKind.Local).AddTicks(1130)
                        });
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Publicacion", b =>
                {
                    b.HasOne("AwpaAcademic.Api.Models.Entities.Facultad", "Facultad")
                        .WithMany("Publicaciones")
                        .HasForeignKey("CodigoFacultad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Publicaciones_Facultades_CodigoFacultad");

                    b.HasOne("AwpaAcademic.Api.Models.Entities.User", "User")
                        .WithMany("Publicaciones")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Publicaciones_Users_UserId");

                    b.Navigation("Facultad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.User", b =>
                {
                    b.HasOne("AwpaAcademic.Api.Models.Entities.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("Codigofacultad")
                        .HasConstraintName("FK_Users_Facultades_Codigofacultad");

                    b.HasOne("AwpaAcademic.Api.Models.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Users_Roles_RoleId");

                    b.Navigation("Facultad");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Facultad", b =>
                {
                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.User", b =>
                {
                    b.Navigation("Publicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}

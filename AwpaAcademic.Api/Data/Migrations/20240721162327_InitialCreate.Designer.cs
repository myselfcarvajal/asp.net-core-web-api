// <auto-generated />
using System;
using AwpaAcademic.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AwpaAcademic.Api.Data.Migrations
{
    [DbContext(typeof(AwpaAcademicDbContext))]
    [Migration("20240721162327_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Facultad", b =>
                {
                    b.Property<string>("CodigoFacultad")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NombreFacultad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoFacultad");

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Publicacion", b =>
                {
                    b.Property<Guid>("IdPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoFacultad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultadCodigoFacultad")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdPublicacion");

                    b.HasIndex("FacultadCodigoFacultad");

                    b.HasIndex("UserId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigofacultad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultadCodigoFacultad")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FacultadCodigoFacultad");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Publicacion", b =>
                {
                    b.HasOne("AwpaAcademic.Api.Models.Entities.Facultad", "Facultad")
                        .WithMany("Publicaciones")
                        .HasForeignKey("FacultadCodigoFacultad");

                    b.HasOne("AwpaAcademic.Api.Models.Entities.User", "User")
                        .WithMany("Publicaciones")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.User", b =>
                {
                    b.HasOne("AwpaAcademic.Api.Models.Entities.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadCodigoFacultad");

                    b.HasOne("AwpaAcademic.Api.Models.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.Facultad", b =>
                {
                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("AwpaAcademic.Api.Models.Entities.User", b =>
                {
                    b.Navigation("Publicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
